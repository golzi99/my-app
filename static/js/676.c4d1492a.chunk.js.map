{"version":3,"file":"static/js/676.c4d1492a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Utils/Validators/validators.js","webpack://my-app/./src/components/common/PostSmtForm/PostSmtFormCss.module.css?c58e","components/common/PostSmtForm/PostSmtFormFormik.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__-b6rx\",\"backgroundProfile\":\"ProfileInfo_backgroundProfile__JQYjh\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const _activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const _deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const _onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                    <span onDoubleClick={_activateEditMode}>{props.status || \"-------------\"}</span>\r\n                </div> :\r\n                <div>\r\n                    <input onChange={_onStatusChange} autoFocus={true} onBlur={_deactivateEditMode}\r\n                           value={status}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import ProfileInfoCss from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preLoader/preloader\";\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nexport function ProfileInfo({profile, status, updateStatus}) {\r\n    if (!profile) {\r\n        return (<Preloader></Preloader>);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={ProfileInfoCss.backgroundProfile}></div>\r\n            <div className={ProfileInfoCss.descriptionBlock}>\r\n                {!profile.photos.large ? <img alt=\"avatarProfile\" src={`/img/no-profile-picture-icon.png`}/> :\r\n                    <img alt=\"avatarProfile\" src={profile.photos.large}/>}\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}></ProfileStatusWithHooks>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__I7V0T\",\"postList\":\"MyPosts_postList__aMUU1\",\"postEnterText\":\"MyPosts_postEnterText__0UJzf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__nW+I8\"};","import PostModule from \"./Post.module.css\"\r\n\r\nexport function Post(props) {\r\n    return (\r\n        <div className={PostModule.item}>\r\n            <img alt=\"Avatar\"\r\n                 src={`/img/no-profile-picture-icon.png`}/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import Posts from \"./MyPosts.module.css\"\r\nimport {Post} from \"./Post/Post\";\r\nimport React from 'react';\r\nimport {PostSmtFormFormik} from \"../../common/PostSmtForm/PostSmtFormFormik\";\r\n\r\n// window.props = [];\r\n\r\nexport const MyPosts = React.memo(props => {\r\n\r\n    // window.props.push(props);\r\n    let postsElements = props.postsData.map((p) => {\r\n        return (<Post key={p.id} message={p.message} likesCount={p.likesCount}></Post>)\r\n    })\r\n\r\n    return (\r\n        <div className={Posts.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostSmtFormFormik></PostSmtFormFormik>\r\n            </div>\r\n            <div className={Posts.postList}>\r\n                {postsElements}\r\n            </div>\r\n        </div>);\r\n});\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {Formik} from \"formik\";\r\nimport {PostSchema} from \"../../Utils/Validators/validators\";\r\n\r\nexport function MyPostContainer(props) {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newTextBody: ''\r\n            }}\r\n            validationSchema={PostSchema}\r\n            onSubmit={\r\n                (values) => {\r\n                    props.addPost(values.newTextBody);\r\n                    values.newTextBody = '';\r\n                }\r\n            }\r\n        >\r\n            <MyPosts {...props}></MyPosts>\r\n        </Formik>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        },\r\n    };\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPostContainer);","import {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Preloader from \"../common/preLoader/preloader\";\r\n\r\nexport function Profile(props) {\r\n\r\n    if (props.location === \"/ProfileInfo\" && !props.isAuth) {\r\n        return (<Navigate to={\"/Login\"}></Navigate>);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!props.profile ? <Preloader></Preloader> :\r\n                <>\r\n                    <ProfileInfo isAuth={props.isAuth} location={props.location} profile={props.profile} status={props.status}\r\n                                 updateStatus={props.updateStatus}></ProfileInfo>\r\n                    <MyPostsContainer></MyPostsContainer>\r\n                </>}\r\n        </div>);\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction ProfileContainer(props) {\r\n    let location = useLocation().pathname;\r\n    const navigate = useNavigate()\r\n\r\n    let {userId} = useParams();\r\n    if (!userId) {\r\n        userId = props.authorizedUserId;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            navigate(\"/Login\");\r\n        } else {\r\n            props.getUserProfile(userId);\r\n            props.getStatus(userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <Profile isAuth={props.isAuth} location={location} profile={props.profile} status={props.status}\r\n                     updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus\r\n}))(ProfileContainer); //, withAuthRedirect","import * as Yup from 'yup';\r\n\r\nexport const EmailErrorSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid email').required('Required email'),\r\n    password: Yup.string().required('Required password')\r\n});\r\n\r\nexport const PostSchema = Yup.object().shape({\r\n    newTextBody: Yup.string()\r\n        .max(100, 'Too Long!')\r\n        .required('Required')\r\n});\r\n\r\nexport const MessageSchema = Yup.object().shape({\r\n    newTextBody: Yup.string()\r\n        .required('Required')\r\n});","// extracted by mini-css-extract-plugin\nexport default {\"sendMessageBox\":\"PostSmtFormCss_sendMessageBox__CaGjP\"};","import PostSmtCss from \"./PostSmtFormCss.module.css\"\r\nimport React from \"react\";\r\nimport {Field, Form, useFormikContext} from \"formik\";\r\n\r\nexport function PostSmtFormFormik() {\r\n\r\n    const formik = useFormikContext();\r\n\r\n    let hasError = formik.touched.newTextBody && formik.errors.newTextBody;\r\n    return (\r\n        <div className={PostSmtCss.sendMessageBox}>\r\n            <Form>\r\n                <Field\r\n                    type=\"textarea\"\r\n                    id=\"newTextBody\"\r\n                    name=\"newTextBody\"\r\n                    placeholder=\"Enter your message\"\r\n                    component=\"textarea\"\r\n                />\r\n                {hasError ? <div>{formik.errors.newTextBody}</div> : null}\r\n                <button type=\"submit\">Send</button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsx","children","onChange","e","currentTarget","value","autoFocus","onBlur","_deactivateEditMode","updateStatus","onDoubleClick","_activateEditMode","ProfileInfo","_ref","profile","_jsxs","className","ProfileInfoCss","backgroundProfile","descriptionBlock","photos","large","alt","src","ProfileStatusWithHooks","Preloader","Post","PostModule","message","likesCount","MyPosts","React","postsElements","postsData","map","p","id","Posts","PostSmtFormFormik","MyPostsContainer","connect","state","profilePage","dispatch","addPost","newPost","addPostActionCreator","Formik","initialValues","newTextBody","validationSchema","PostSchema","onSubmit","values","Profile","location","isAuth","_Fragment","Navigate","to","compose","authorizedUserId","auth","userId","getUserProfile","getStatus","useLocation","pathname","navigate","useNavigate","useParams","EmailErrorSchema","Yup","shape","email","required","password","max","MessageSchema","formik","useFormikContext","hasError","touched","errors","PostSmtCss","sendMessageBox","Form","Field","type","name","placeholder","component"],"sourceRoot":""}