{"version":3,"file":"static/js/676.30225386.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Utils/Validators/validators.js","webpack://my-app/./src/components/common/PostSmtForm/PostSmtFormCss.module.css?c58e","components/common/PostSmtForm/PostSmtFormFormik.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__-b6rx\",\"profileImg\":\"ProfileInfo_profileImg__LbHdN\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const _activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const _deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const _onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                    <span onDoubleClick={_activateEditMode}>{props.status || \"-------------\"}</span>\r\n                </div> :\r\n                <div>\r\n                    <input onChange={_onStatusChange} autoFocus={true} onBlur={_deactivateEditMode}\r\n                           value={status}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import ProfileInfoCss from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preLoader/preloader\";\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport nonProfileImg from \"@assets/img/noProfilePictureIcon.png\"\r\n\r\nexport function ProfileInfo({profile, status, updateStatus, isOwner, savePhoto}) {\r\n\r\n    if (!profile) {\r\n        return (<Preloader></Preloader>);\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={ProfileInfoCss.descriptionBlock}>\r\n                <div className={ProfileInfoCss.avatarEditable}>\r\n                    {isOwner ?\r\n                        <label role={\"button\"} title={\"Edit your profile photo\"}>\r\n                            <input type={\"file\"} accept={\"image/png, image/jpeg\"} style={{ display: \"none\" }}\r\n                            onChange={onMainPhotoSelected}/>\r\n                            <img className={ProfileInfoCss.profileImg} alt=\"avatarProfile\" src={profile.photos.large || nonProfileImg}/>\r\n                        </label>\r\n                        :\r\n                        <img alt=\"avatarProfile\" src={profile.photos.large || nonProfileImg}/>\r\n                    }\r\n                </div>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}></ProfileStatusWithHooks>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__I7V0T\",\"postList\":\"MyPosts_postList__aMUU1\",\"postEnterText\":\"MyPosts_postEnterText__0UJzf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__nW+I8\"};","import PostModule from \"./Post.module.css\"\r\nimport nonProfileImg from \"@assets/img/noProfilePictureIcon.png\"\r\n\r\nexport function Post(props) {\r\n    return (\r\n        <div className={PostModule.item}>\r\n            <img alt=\"Avatar\"\r\n                 src={nonProfileImg}/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import Posts from \"./MyPosts.module.css\"\r\nimport {Post} from \"./Post/Post\";\r\nimport React from 'react';\r\nimport {PostSmtFormFormik} from \"../../common/PostSmtForm/PostSmtFormFormik\";\r\n\r\n// window.props = [];\r\n\r\nexport const MyPosts = React.memo(props => {\r\n\r\n    // window.props.push(props);\r\n    let postsElements = props.postsData.map((p) => {\r\n        return (<Post key={p.id} message={p.message} likesCount={p.likesCount}></Post>)\r\n    })\r\n\r\n    return (\r\n        <div className={Posts.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostSmtFormFormik></PostSmtFormFormik>\r\n            </div>\r\n            <div className={Posts.postList}>\r\n                {postsElements}\r\n            </div>\r\n        </div>);\r\n});\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {Formik} from \"formik\";\r\nimport {PostSchema} from \"../../Utils/Validators/validators\";\r\n\r\nexport function MyPostContainer(props) {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newTextBody: ''\r\n            }}\r\n            validationSchema={PostSchema}\r\n            onSubmit={\r\n                (values) => {\r\n                    props.addPost(values.newTextBody);\r\n                    values.newTextBody = '';\r\n                }\r\n            }\r\n        >\r\n            <MyPosts {...props}></MyPosts>\r\n        </Formik>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        },\r\n    };\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPostContainer);","import {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Preloader from \"../common/preLoader/preloader\";\r\n\r\nexport function Profile(props) {\r\n\r\n    if (props.isOwner && !props.isAuth) {\r\n        return (<Navigate to={\"/Login\"}></Navigate>);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!props.profile ? <Preloader></Preloader> :\r\n                <>\r\n                    <ProfileInfo profile={props.profile} status={props.status} isOwner={props.isOwner}\r\n                                 updateStatus={props.updateStatus} savePhoto={props.savePhoto}></ProfileInfo>\r\n                    <MyPostsContainer></MyPostsContainer>\r\n                </>}\r\n        </div>);\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction ProfileContainer(props) {\r\n    const navigate = useNavigate()\r\n    const params = useParams();\r\n\r\n    let userId = params[\"userId\"];\r\n    if (!userId) {\r\n        userId = props.authorizedUserId;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            navigate(\"/Login\");\r\n        } else {\r\n            props.getUserProfile(userId);\r\n            props.getStatus(userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <Profile isAuth={props.isAuth} profile={props.profile} status={props.status}\r\n                     isOwner={!params[\"userId\"]} updateStatus={props.updateStatus} savePhoto={props.savePhoto}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n}))(ProfileContainer); //, withAuthRedirect","import * as Yup from 'yup';\r\n\r\nexport const EmailErrorSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid email').required('Required email'),\r\n    password: Yup.string().required('Required password')\r\n});\r\n\r\nexport const PostSchema = Yup.object().shape({\r\n    newTextBody: Yup.string()\r\n        .max(100, 'Too Long!')\r\n        .required('Required')\r\n});\r\n\r\nexport const MessageSchema = Yup.object().shape({\r\n    newTextBody: Yup.string()\r\n        .required('Required')\r\n});","// extracted by mini-css-extract-plugin\nexport default {\"sendMessageBox\":\"PostSmtFormCss_sendMessageBox__CaGjP\"};","import PostSmtCss from \"./PostSmtFormCss.module.css\"\r\nimport React from \"react\";\r\nimport {Field, Form, useFormikContext} from \"formik\";\r\n\r\nexport function PostSmtFormFormik() {\r\n\r\n    const formik = useFormikContext();\r\n\r\n    let hasError = formik.touched.newTextBody && formik.errors.newTextBody;\r\n    return (\r\n        <div className={PostSmtCss.sendMessageBox}>\r\n            <Form>\r\n                <Field\r\n                    type=\"textarea\"\r\n                    id=\"newTextBody\"\r\n                    name=\"newTextBody\"\r\n                    placeholder=\"Enter your message\"\r\n                    component=\"textarea\"\r\n                />\r\n                {hasError ? <div>{formik.errors.newTextBody}</div> : null}\r\n                <button type=\"submit\">Send</button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsx","children","onChange","e","currentTarget","value","autoFocus","onBlur","_deactivateEditMode","updateStatus","onDoubleClick","_activateEditMode","ProfileInfo","_ref","profile","isOwner","savePhoto","Preloader","_jsxs","className","ProfileInfoCss","descriptionBlock","avatarEditable","role","title","type","accept","style","display","target","files","length","profileImg","alt","src","photos","large","nonProfileImg","ProfileStatusWithHooks","Post","PostModule","message","likesCount","MyPosts","React","postsElements","postsData","map","p","id","Posts","PostSmtFormFormik","MyPostsContainer","connect","state","profilePage","dispatch","addPost","newPost","addPostActionCreator","Formik","initialValues","newTextBody","validationSchema","PostSchema","onSubmit","values","Profile","isAuth","Navigate","to","_Fragment","compose","authorizedUserId","auth","userId","getUserProfile","getStatus","navigate","useNavigate","params","useParams","EmailErrorSchema","Yup","shape","email","required","password","max","MessageSchema","formik","useFormikContext","hasError","touched","errors","PostSmtCss","sendMessageBox","Form","Field","name","placeholder","component"],"sourceRoot":""}